# Generated by Django 5.0.2 on 2025-08-13 23:44

import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0091_remove_revision_submitted_for_moderation"),
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="BlogIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro",
                    models.TextField(
                        blank=True,
                        help_text="Optional blog introduction",
                        max_length=500,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Open Graph image for social media sharing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Blog Index Page",
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="BlogPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True, verbose_name="Post date")),
                (
                    "intro",
                    models.TextField(
                        help_text="Blog post introduction/excerpt", max_length=500
                    ),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            (
                                "text",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "content",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "h2",
                                                    "h3",
                                                    "h4",
                                                    "bold",
                                                    "italic",
                                                    "link",
                                                    "ol",
                                                    "ul",
                                                    "document-link",
                                                    "image",
                                                    "embed",
                                                ],
                                                help_text="Rich text content",
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="Select an image"
                                            ),
                                        ),
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Optional image caption",
                                                max_length=255,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "alignment",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("left", "Left"),
                                                    ("center", "Center"),
                                                    ("right", "Right"),
                                                ],
                                                help_text="Image alignment",
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(
                                                help_text="CTA heading", max_length=255
                                            ),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(
                                                help_text="Supporting text",
                                                max_length=500,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Button text", max_length=100
                                            ),
                                        ),
                                        (
                                            "button_link",
                                            wagtail.blocks.URLBlock(
                                                help_text="Button URL"
                                            ),
                                        ),
                                        (
                                            "background_color",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("primary", "Primary"),
                                                    ("secondary", "Secondary"),
                                                    ("dark", "Dark"),
                                                    ("light", "Light"),
                                                ],
                                                help_text="Background color theme",
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ]
                    ),
                ),
                (
                    "featured_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Featured image for the blog post",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Open Graph image for social media sharing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Blog Page",
                "ordering": ["-date"],
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="HomePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_heading",
                    models.CharField(help_text="Main hero heading", max_length=255),
                ),
                (
                    "hero_subheading",
                    models.TextField(
                        blank=True, help_text="Optional hero subheading", max_length=500
                    ),
                ),
                (
                    "hero_cta_text",
                    models.CharField(
                        blank=True, help_text="Hero CTA button text", max_length=100
                    ),
                ),
                (
                    "hero_cta_link",
                    models.URLField(blank=True, help_text="Hero CTA button URL"),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            (
                                "features",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(
                                                help_text="Section heading",
                                                max_length=255,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "subheading",
                                            wagtail.blocks.TextBlock(
                                                help_text="Optional section subheading",
                                                max_length=500,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "features",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "icon",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Icon class or name (e.g., 'rocket', 'star')",
                                                                max_length=50,
                                                            ),
                                                        ),
                                                        (
                                                            "title",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Feature title",
                                                                max_length=100,
                                                            ),
                                                        ),
                                                        (
                                                            "description",
                                                            wagtail.blocks.TextBlock(
                                                                help_text="Feature description"
                                                            ),
                                                        ),
                                                    ]
                                                ),
                                                help_text="Add 2-6 features",
                                                max_num=6,
                                                min_num=2,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "testimonial",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "quote",
                                            wagtail.blocks.TextBlock(
                                                help_text="Customer testimonial quote"
                                            ),
                                        ),
                                        (
                                            "author_name",
                                            wagtail.blocks.CharBlock(
                                                help_text="Author name", max_length=100
                                            ),
                                        ),
                                        (
                                            "author_title",
                                            wagtail.blocks.CharBlock(
                                                help_text="Author job title",
                                                max_length=100,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "company",
                                            wagtail.blocks.CharBlock(
                                                help_text="Company name",
                                                max_length=100,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "author_image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="Author photo", required=False
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(
                                                help_text="CTA heading", max_length=255
                                            ),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(
                                                help_text="Supporting text",
                                                max_length=500,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Button text", max_length=100
                                            ),
                                        ),
                                        (
                                            "button_link",
                                            wagtail.blocks.URLBlock(
                                                help_text="Button URL"
                                            ),
                                        ),
                                        (
                                            "background_color",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("primary", "Primary"),
                                                    ("secondary", "Secondary"),
                                                    ("dark", "Dark"),
                                                    ("light", "Light"),
                                                ],
                                                help_text="Background color theme",
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "text",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "content",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "h2",
                                                    "h3",
                                                    "h4",
                                                    "bold",
                                                    "italic",
                                                    "link",
                                                    "ol",
                                                    "ul",
                                                    "document-link",
                                                    "image",
                                                    "embed",
                                                ],
                                                help_text="Rich text content",
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="Select an image"
                                            ),
                                        ),
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Optional image caption",
                                                max_length=255,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "alignment",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("left", "Left"),
                                                    ("center", "Center"),
                                                    ("right", "Right"),
                                                ],
                                                help_text="Image alignment",
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                    ),
                ),
                (
                    "hero_background_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Hero background image",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Open Graph image for social media sharing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Home Page",
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="StandardPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro",
                    models.TextField(
                        blank=True,
                        help_text="Optional page introduction",
                        max_length=500,
                    ),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            (
                                "hero",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(
                                                help_text="Main hero heading",
                                                max_length=255,
                                            ),
                                        ),
                                        (
                                            "subheading",
                                            wagtail.blocks.TextBlock(
                                                help_text="Optional subheading text",
                                                max_length=500,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "cta_text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Call to action button text",
                                                max_length=100,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "cta_link",
                                            wagtail.blocks.URLBlock(
                                                help_text="Call to action button URL",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "background_image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="Background image for the hero section",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "features",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(
                                                help_text="Section heading",
                                                max_length=255,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "subheading",
                                            wagtail.blocks.TextBlock(
                                                help_text="Optional section subheading",
                                                max_length=500,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "features",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "icon",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Icon class or name (e.g., 'rocket', 'star')",
                                                                max_length=50,
                                                            ),
                                                        ),
                                                        (
                                                            "title",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Feature title",
                                                                max_length=100,
                                                            ),
                                                        ),
                                                        (
                                                            "description",
                                                            wagtail.blocks.TextBlock(
                                                                help_text="Feature description"
                                                            ),
                                                        ),
                                                    ]
                                                ),
                                                help_text="Add 2-6 features",
                                                max_num=6,
                                                min_num=2,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "testimonial",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "quote",
                                            wagtail.blocks.TextBlock(
                                                help_text="Customer testimonial quote"
                                            ),
                                        ),
                                        (
                                            "author_name",
                                            wagtail.blocks.CharBlock(
                                                help_text="Author name", max_length=100
                                            ),
                                        ),
                                        (
                                            "author_title",
                                            wagtail.blocks.CharBlock(
                                                help_text="Author job title",
                                                max_length=100,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "company",
                                            wagtail.blocks.CharBlock(
                                                help_text="Company name",
                                                max_length=100,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "author_image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="Author photo", required=False
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(
                                                help_text="CTA heading", max_length=255
                                            ),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(
                                                help_text="Supporting text",
                                                max_length=500,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Button text", max_length=100
                                            ),
                                        ),
                                        (
                                            "button_link",
                                            wagtail.blocks.URLBlock(
                                                help_text="Button URL"
                                            ),
                                        ),
                                        (
                                            "background_color",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("primary", "Primary"),
                                                    ("secondary", "Secondary"),
                                                    ("dark", "Dark"),
                                                    ("light", "Light"),
                                                ],
                                                help_text="Background color theme",
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "text",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "content",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "h2",
                                                    "h3",
                                                    "h4",
                                                    "bold",
                                                    "italic",
                                                    "link",
                                                    "ol",
                                                    "ul",
                                                    "document-link",
                                                    "image",
                                                    "embed",
                                                ],
                                                help_text="Rich text content",
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="Select an image"
                                            ),
                                        ),
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Optional image caption",
                                                max_length=255,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "alignment",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("left", "Left"),
                                                    ("center", "Center"),
                                                    ("right", "Right"),
                                                ],
                                                help_text="Image alignment",
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Open Graph image for social media sharing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Standard Page",
            },
            bases=("wagtailcore.page", models.Model),
        ),
    ]
