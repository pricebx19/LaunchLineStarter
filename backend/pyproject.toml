[tool.poetry]
name = "launchline-starter-backend"
version = "0.1.0"
description = "LaunchLine Starter Template Backend - Django + Wagtail"
authors = ["LaunchLine <dev@launchline.io>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
django = ">=5,<6"
wagtail = ">=6,<7"
djangorestframework = "^3.14.0"
psycopg = {extras = ["binary"], version = "^3.1.0"}
python-dotenv = "^1.0.0"
whitenoise = "^6.6.0"
django-cors-headers = "^4.3.0"
pillow = "^10.0.0"
gunicorn = "^21.2.0"

[tool.poetry.group.dev.dependencies]
black = "^23.12.0"
ruff = "^0.1.8"
isort = "^5.13.0"
mypy = "^1.7.0"
pytest = "^7.4.0"
pytest-django = "^4.7.0"
model-bakery = "^1.17.0"
dj-database-url = "^2.1.0"
types-python-dateutil = "^2.8.0"
django-stubs = "^4.2.0"
djangorestframework-stubs = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
skip = ["migrations"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pycache__",
    "migrations",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "config.settings"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.dev"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "-v --tb=short"

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]  # Skip assert and shell injection in tests